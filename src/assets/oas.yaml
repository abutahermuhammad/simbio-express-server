openapi: 3.0.0
info:
    title: SIMBIO - Blood Management System API
    description: |-
        This is a sample Person Store Server based on the OpenAPI 3.0 specification.  You can find out more about
        Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the person store, we've switched to the design first approach!
        You can now help us improve the API whether it's by making changes to the definition itself or to the code.
        That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

        _If you're looking for the Swagger 2.0/OAS 2.0 version of Personstore, then click [here](https://editor.swagger.io/?url=https://personstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Personstore OAS 2.0` menu option!_

        Some useful links:
        - [The Person Store repository](https://github.com/swagger-api/swagger-personstore)
        - [The source API definition for the Person Store](https://github.com/swagger-api/swagger-personstore/blob/master/src/main/resources/openapi.yaml)
    termsOfService: http://swagger.io/terms/
    contact:
        email: dev@dot9.dev
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0.0
externalDocs:
    description: Find out more about SIMBIO
    url: http://dot9.dev/projects/simbio
servers:
    - url: https://simbio.dot9.dev/api/v1
    - url: https://localhost:5000/api/v1
tags:
    - name: person
      description: Operations about person
    - name: member
    - name: contact
    - name: user
      description: Operations about user
paths:
    /persons:
        post:
            tags:
                - person
            summary: Create person
            description: Add a new person to the store
            operationId: createPerson
            parameters:
                - in: path
                  name: context
                  required: true
                  schema:
                      type: string
                      enum:
                          - web
                          - api
                          - app
                  description: Context
                  example: "web"
            requestBody:
                description: Create a new person.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                ref_id:
                                    type: string
                                    minimum: 10
                                    maximum: 10
                                    pattern: ^[0-9]{10}$
                                    description: External reference ID for the person (optional)
                                avatar:
                                    type: string
                                    format: base64
                                    description: Person's avatar
                                    example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg=="
                                first_name:
                                    type: string
                                    example: John
                                last_name:
                                    type: string
                                    example: Doe
                                dob:
                                    type: string
                                    format: date
                                    minimum: 0
                                    maximum: 50
                                    description: Person's date of birth. This is a date-time value (RFC3339).
                                    example: "2023-01-01T00:00:00Z"
                                gender:
                                    type: string
                                    enum: [MALE, FEMALE, INTERSEX]
                                    description: Person's biological gender. This is an enum value.
                                profession:
                                    type: string
                                    description: Person's profession
                                    example: Software Engineer
                                blood_group:
                                    type: string
                                    description: Person's blood group
                                    example: "O+"
                                father:
                                    type: string
                                    description: Person's father name
                                    example: "John"
                                mother:
                                    type: string
                                    description: Person's mother name
                                    example: "Jane"
                                address_line:
                                    type: string
                                    example: "123 Main Street"
                                address_line_1:
                                    type: string
                                    example: "Apt. B"
                                city:
                                    type: string
                                    example: "Anytown"
                                state:
                                    type: string
                                    example: "CA"
                                postal_code:
                                    type: string
                                    example: "12345"
                                country:
                                    type: string
                                    example: "USA"
                                phone:
                                    type: string
                                    example: "1234567890"
                                email:
                                    type: string
                                    example: "johndoe@me.com"
                                passport:
                                    type: string
                                    description: Passport number
                                nid:
                                    type: string
                                    example: "123456789"
                                driving_license:
                                    type: string
                                    example: "123456789"
                                birth_cert:
                                    type: string
                                    example: "123456789"
                                medical_condition:
                                    type: string
                                    example: diabetes
                                allergies:
                                    type: string
                                    example: pollen
                                diseases:
                                    type: string
                                    example: flu
                                medications:
                                    type: string
                                    example: ibuprofen
                                note:
                                    type: string
                                    example: "This is a note"
                            xml:
                                name: person
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Person"
                required: true
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        example: true
                                    message:
                                        type: string
                                        example: "Person created"
                                    data:
                                        type: object
                                        example: {}
                                    errors:
                                        type: array
                                        example: null
                "403":
                    description: Forbidden operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        example: false
                                    message:
                                        type: string
                                        example: "Forbidden"
                                    data:
                                        type: object
                                        example: null
                                    errors:
                                        type: array
                                        example: ["Unauthorized access request"]
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        example: false
                                    message:
                                        type: string
                                        example: "Internal server error"
                                    data:
                                        type: object
                                        example: null
                                    errors:
                                        type: array
                                        example: ["Something wrong happened"]
            security:
                - personstore_auth:
                      - write:persons
                      - read:persons
        get:
            tags:
                - person
            summary: People list
            description: List of people profiles.
            operationId: getPeople
            parameters:
                - in: query
                  name: limit
                  schema:
                      type: integer
                      example: 10
                      description: Limit number of records
                - in: query
                  name: offset
                  schema:
                      type: integer
                      example: 0
                      description: Offset
                - in: query
                  name: sort
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                      example: asc
                - in: query
                  name: search
                  schema:
                      type: string
                      example: John
                - in: query
                  name: gender

        # get: // Get a single person
        put:
            tags:
                - person
            summary: Update person
            description: Update an existing person by Id
            operationId: updatePerson
            requestBody:
                description: Update an existent person in the store
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Person"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Person"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Person"
                required: true
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Person"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Person"
                "400":
                    description: Invalid ID supplied
                "404":
                    description: Person not found
                "405":
                    description: Validation exception
            security:
                - personstore_auth:
                      - write:persons
                      - read:persons
        delete:
components:
    schemas:
        Person:
            type: object
            required:
                - id
                - first_name
                - last_name
                - dob
                - gender
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                    minimum: 0
                    maximum: 50
                    description: ID of the person
                created_at:
                    type: integer
                    format: int64
                    minimum: 0
                    maximum: 50
                    description: Timestamp when the person record was created (UTC). This is a Unix timestamp.
                    example: 1609459200
                created_by:
                    type: integer
                    format: int64
                    minimum: 0
                    maximum: 50
                    description: ID of the user who created the person record. This is a foreign key to the user table.
                    example: 1
                    $ref: "#/components/schemas/User"
                updated_at:
                    type: integer
                    format: int64
                    description: Timestamp when the person record was last updated (UTC). This is a Unix timestamp.
                    minimum: 0
                    maximum: 50
                    example: 1609459200
                updated_by:
                    type: integer
                    format: int64
                    minimum: 0
                    maximum: 50
                    description: ID of the user who last updated the person record. This is a foreign key to the user table.
                    example: 1
                    $ref: "#/components/schemas/User"
                deleted_at:
                    type: integer
                    format: int64
                    minimum: 0
                    maximum: 50
                    description: Timestamp when the person record was deleted (UTC). This is a Unix timestamp.
                    example: 1609459200
                deleted_by:
                    type: integer
                    format: int64
                    minimum: 0
                    maximum: 50
                    description: ID of the user who last deleted the person record. This is a foreign key to the user table.
                    example: 1
                    $ref: "#/components/schemas/User"
                ref_id:
                    type: string
                    description: External reference ID for the person (optional)
                avatar:
                    type: string
                    format: uri
                    description: Person's avatar (optional)
                    example: "https://via.placeholder.com/150"
                first_name:
                    type: string
                    description: Person's first name
                last_name:
                    type: string
                    description: Person's last name
                dob:
                    type: string
                    format: date
                    description: Person's date of birth. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                gender:
                    type: string
                    enum: [MALE, FEMALE, INTERSEX]
                    description: Person's biological gender. This is an enum value.
                profession:
                    type: string
                    description: Person's profession
                    example: "Software Engineer"
                blood_group:
                    type: string
                    description: Person's blood group
                    example: "O+"
                father_id:
                    type: integer
                    format: int64
                    description: ID of the person's father.
                    example: 1
                mother_id:
                    type: integer
                    format: int64
                    description: ID of the person's mother.
                    example: 2
                    $ref: "#/components/schemas/Person"
                address_id:
                    type: integer
                    format: int64
                    description: ID of the person's address record.
                    example: 1
                document_ids:
                    type: array
                    nullable: true
                    description: ID of the person's document record. Returns null if there is an error or no records found.
                    items:
                        type: integer
                        format: int64
                        description: ID of the person's document record. Returns null if there is an error or no records found.
                        example: 1
                    example: [1, 2, 3]
                health_id:
                    type: integer
                    format: int64
                    description: ID of the person's health record
                    example: 1
                    # $ref: "#/components/schemas/PersonHealth"
                contact_id:
                    type: integer
                    format: int64
                    description: ID of the person's contact record
                    example: 1
                    # $ref: "#/components/schemas/Contact"
            xml:
                name: person
        Member:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 100000
                ref_id:
                    type: string
                    description: External reference ID for the person (optional)
                username:
                    type: string
                    example: fehguy
            xml:
                name: customer
        PersonHealth:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                medical_condition:
                    type: string
                    example: diabetes
                    description: Medical condition
                allergies:
                    type: string
                    example: pollen
                    description: Allergies
                diseases:
                    type: string
                    description: Infectious Disease history that can spread through blood transfusion.
                    example: cancer
            xml:
                name: category
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                username:
                    type: string
                    example: theUser
                firstName:
                    type: string
                    example: John
                lastName:
                    type: string
                    example: James
                email:
                    type: string
                    example: john@email.com
                password:
                    type: string
                    example: "12345"
                phone:
                    type: string
                    example: "12345"
                userStatus:
                    type: integer
                    description: User Status
                    format: int32
                    example: 1
            xml:
                name: user
        document:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                name:
                    type: string
                    example: passport
                type:
                    type: string
                    example: passport
                    description: Document type
                number:
                    type: string
                    example: 123456
                    description: Document number
                created_at:
                    type: integer
                    format: int64
                    description: Timestamp when the document record was created. This is a Unix timestamp.
                    example: 1609459200
                created_by:
                    type: integer
                    format: int64
                    description: ID of the user who created the document record. This is a foreign key to the user table.
                    example: 1
                updated_at:
                    type: integer
                    format: int64
                    description: Timestamp when the document record was last updated. This is a Unix timestamp.
                    example: 1609459200
                updated_by:
                    type: integer
                    format: int64
                deleted_at:
                    type: string
                    format: date-time
                    description: Timestamp when the country record was deleted. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                deleted_by:
                    type: integer
                    format: int64
                    description: ID of the user who last deleted the country record. This is a foreign key to the user table.
                    example: 1
            xml:
                name: document
        Contact:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the country record was created. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                updated_at:
                    type: integer
                    format: int64
                    description: Timestamp when the country record was last updated. This is a Unix timestamp.
                    example: 1609459200
                updated_by:
                    type: integer
                    format: int64
                    description: ID of the user who last updated the country record. This is a foreign key to the user table.
                    example: 1
                deleted_at:
                    type: string
                    format: date-time
                    description: Timestamp when the country record was deleted. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                deleted_by:
                    type: integer
                    format: int64
                    description: ID of the user who last deleted the country record. This is a foreign key to the user table.
                    example: 1
                version:
                    type: integer
                    format: int64
                    description: Version of the country record.
                    example: 1
                address_line:
                    type: string
                    description: First line of the address
                    example: "123 Main Street"
                address_line_1:
                    type: string
                    description: Second line of the address (optional)
                    example: "Apt. B"
                city:
                    type: string
                    description: City
                    example: "Anytown"
                state:
                    type: string
                    description: State
                    example: "CA"
                postal_code:
                    type: string
                    description: Postal code
                    example: "12345"
                country:
                    type: object
                    description: Country information
                    properties:
                        id:
                            type: integer
                            format: int64
                            description: Unique identifier for the country
                            example: 1
                        alpha-3:
                            type: string
                            description: Name of the country
                            example: "USA"
                phone:
                    type: string
                    description: Phone
                    example: "1234567890"
                phone_1:
                    type: string
                    description: Phone
                    example: "1234567890"
                email:
                    type: string
                    description: Email
                    example: "johndoe@me.com"
                email_1:
                    type: string
                    description: Email
                    example: "johndoe@me.com"
                website:
                    type: string
                    pattern: ^https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$
                    description: Website
                    example: "https://example.com"
                social_media:
                    type: array
                    description: Social media links (optional)
                    items:
                        type: string
                        pattern: ^https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$
                    example:
                        [
                            "https://www.facebook.com/example",
                            "https://www.twitter.com/example",
                        ]
                note:
                    type: string
                    description: Note
                    example: "This is a note"
            xml:
                name: contact
        Country:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                    example: United States
                alpha_2:
                    type: string
                    example: "us"
                    description: ISO 3166-1 alpha-2 country code
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the country record was created. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                created_by:
                    type: integer
                    format: int64
                    description: ID of the user who created the country record. This is a foreign key to the user table.
                    example: 1
                released_at:
                    type: string
                    format: date-time
                    description: Timestamp when the version was released. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                released_by:
                    type: string
                    description: ID of the user who released the country record. This is a foreign key to the user table.
                    example: 1
                release_notes:
                    type: string
                    description: Detailed release notes about the version)
                updated_at:
                    type: integer
                    format: int64
                    description: Timestamp when the country record was last updated. This is a Unix timestamp.
                    example: 1609459200
                updated_by:
                    type: integer
                    format: int64
                    description: ID of the user who last updated the country record. This is a foreign key to the user table.
                    example: 1
                deleted_at:
                    type: string
                    format: date-time
                    description: Timestamp when the country record was deleted. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                deleted_by:
                    type: integer
                    format: int64
                    description: ID of the user who last deleted the country record. This is a foreign key to the user table.
                    example: 1
                version:
                    type: integer
                    format: int64
                    description: Version of the country record.
                    example: 1
            xml:
                name: country
        Device:
            required:
                - id
                - slug
                - title
                - created_at
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the device
                    example: "SD001"
                name:
                    type: string
                    description: Name of the device
                    example: "John's Laptop"
                model:
                    type: string
                    description: Model of the device
                    example: "MacBook Pro M1"
                platform:
                    type: string
                    description: Platform of the device (e.g. ios, android)
                    example: "android"
                platform_version:
                    type: string
                    description: Platform version of the device. e.g. 10.0
                    example: "10.0"
                device_id:
                    type: string
                    description: Device ID
                    example: "unique_device_id"
                brand:
                    type: string
                    description: Brand
                    example: "Apple"
                manufacturer:
                    type: string
                    description: Device manufacturer name
                    example: "Apple Inc."
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the record was created (RFC3339)
                    example: "2023-01-01T00:00:00Z"
                user_id:
                    type: integer
                    format: int64
                    description: ID of the user who owns the device, foreign key to the user table
                    example: 1
        Version:
            required:
                - id
                - slug
                - title
                - created_at
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the version
                    example: "SV001"
                slug:
                    type: string
                    description: Unique identifier for the version.
                    example: "v1.0.0"
                title:
                    type: string
                    description: Human-readable name for the version
                    example: "Version 0.0.1"
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the version was released (RFC3339)
                    example: "2023-01-01T00:00:00Z"
                created_by:
                    type: integer
                    format: int64
                    description: ID of the user who created the country record. This is a foreign key to the user table.
                    example: 1
                released_at:
                    type: string
                    format: date-time
                    description: Timestamp when the version was released. This is a date-time value (RFC3339).
                    example: "2023-01-01T00:00:00Z"
                released_by:
                    type: string
                    description: ID of the user who released the country record. This is a foreign key to the user table.
                    example: 1
                release_notes:
                    type: string
                    description: Detailed release notes about the version)
                updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the version record was last updated (RFC3339)
                    example: "2023-01-01T00:00:00Z"
                updated_by:
                    type: integer
                    format: int64
                    description: ID of the user who last updated the country record. This is a foreign key to the user table.
                    example: 1
                deprecated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the version was deprecated (RFC3339)
                    example: "2023-01-01T00:00:00Z"
                deprecated_by:
                    type: integer
                    format: int64
                    description: ID of the user who deprecated the country record. This is a foreign key to the user table.
                    example: 1
                description:
                    type: string
                    description: A brief description of the version
                    example: "Initial public release of the API"
        CRUDResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Success status
                    example: true
                message:
                    type: string
                    description: Success message
                    example: "Success"
                data:
                    type: object
                    description: Data returned by the API
                    example: {}
                errors:
                    type: array
                    description: Error messages
                    example: []
            xml:
                name: response
    requestBodies:
        Person:
            description: Person object that needs to be added to the store
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Person"
                application/xml:
                    schema:
                        $ref: "#/components/schemas/Person"
        UserArray:
            description: List of user object
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: "#/components/schemas/User"
    securitySchemes:
        personstore_auth:
            type: oauth2
            flows:
                implicit:
                    authorizationUrl: https://personstore3.swagger.io/oauth/authorize
                    scopes:
                        write:persons: modify persons in your account
                        read:persons: read your persons
        api_key:
            type: apiKey
            name: api_key
            in: header
